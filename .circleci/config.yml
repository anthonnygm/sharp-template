# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    machine: true
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          name: Run tests
          command: |
            dotnet test
      - run:
          name: Build and push Docker image
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku login
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push --app sharp-template-api web
            HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release --app sharp-template-api web          
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test:
          context:
            - sharp-template-context
